specVersion: 1.0.0
name: frontier-evm-starter-project
version: 1.0.0
runner:
  node:
    name: '@subql/node'
    version: '>=0.34.0'
  query:
    name: '@subql/query'
    version: '*'
description: >-
  A basic Frontier EVM example project with an event and call handler. Read more
  about this at https://doc.subquery.network/create/frontier/
repository: https://github.com/subquery/tutorials-frontier-evm-starter

schema:
  file: ./schema.graphql

network:
  chainId: '0x401a1f9dca3da46f5c4091016c8a2f26dcea05865116b286f60f668207d1474b'
  endpoint: wss://moonriver.api.onfinality.io/public-ws
  dictionary: https://api.subquery.network/sq/subquery/moonriver-dictionary
  chaintypes:
    file: ./dist/chaintypes.js

dataSources:
  - kind: substrate/FrontierEvm
    startBlock: 752073
    processor:
      file: './dist/frontierEvm.js'
      options:
        # Must be a key of assets
        abi: erc20
        ## The contract that emitted the event
        address: '0x6bd193ee6d2104f14f94e2ca6efefae561a4334b'
    assets:
      erc20:
        file: './erc20.abi.json'
    mapping:
      file: './dist/index.js'
      handlers:
        - handler: handleFrontierEvmEvent
          kind: substrate/FrontierEvmEvent
          filter:
            ## Topics that follow Ethereum JSON-RPC log filters
            ## https://docs.ethers.io/v5/concepts/events/
            ## With a couple of added benefits:
            ##  - Values don't need to be 0 padded
            ##  - Event fragments can be provided and automatically converted to their id
            topics:
              ## Example valid values:
              # - '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'
              # - Transfer(address,address,u256)
              # - Transfer(address from,address to,uint256 value)

              - Transfer(address indexed from,address indexed to,uint256 value)
              ## topics[1] to topics[3] are the indexed values
              - null
              - null
              - null
        - handler: handleFrontierEvmCall
          kind: substrate/FrontierEvmCall
          filter:
            ## The function can either be the method fragment or signature
            # function: '0x095ea7b3'
            # function: '0x7ff36ab500000000000000000000000000000000000000000000000000000000'
            # function: approve(address,uint256)
            function: approve(address to,uint256 value)
            ## The transaction sender
            from: '0x6bd193ee6d2104f14f94e2ca6efefae561a4334b'
